
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the CartoDEA v4.0 application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "The user's username."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "MapLayer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MapLayer",
      "type": "object",
      "description": "Represents a map layer that can be displayed on the map.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the map layer."
        },
        "name": {
          "type": "string",
          "description": "The name of the map layer."
        },
        "url": {
          "type": "string",
          "description": "The URL of the map layer's data source."
        },
        "layerType": {
          "type": "string",
          "description": "The type of the map layer (e.g., GeoJSON, KML, TileWMS)."
        },
        "isVisible": {
          "type": "boolean",
          "description": "Indicates whether the map layer is currently visible on the map."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who uploaded this MapLayer. (Relationship: User 1:N MapLayer)"
        }
      },
      "required": [
        "id",
        "name",
        "url",
        "layerType",
        "isVisible",
        "userId"
      ]
    },
    "ExplorationSuggestion": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ExplorationSuggestion",
      "type": "object",
      "description": "Represents a point of interest suggested by the Genkit tool.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the exploration suggestion."
        },
        "name": {
          "type": "string",
          "description": "The name of the point of interest."
        },
        "description": {
          "type": "string",
          "description": "A description of the point of interest."
        },
        "latitude": {
          "type": "number",
          "description": "The latitude of the point of interest."
        },
        "longitude": {
          "type": "number",
          "description": "The longitude of the point of interest."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "latitude",
        "longitude"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  Path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/mapLayers/{mapLayerId}",
        "definition": {
          "entityName": "MapLayer",
          "schema": {
            "$ref": "#/backend/entities/MapLayer"
          },
          "description": "Stores map layers associated with a specific user. Includes denormalized 'userId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user who owns the map layer."
            },
            {
              "name": "mapLayerId",
              "description": "The unique identifier for the map layer."
            }
          ]
        }
      },
      {
        "path": "/explorationSuggestions/{explorationSuggestionId}",
        "definition": {
          "entityName": "ExplorationSuggestion",
          "schema": {
            "$ref": "#/backend/entities/ExplorationSuggestion"
          },
          "description": "Stores exploration suggestions.  No ownership; globally accessible.",
          "params": [
            {
              "name": "explorationSuggestionId",
              "description": "The unique identifier for the exploration suggestion."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to ensure security, scalability, and ease of debugging, following the principles of Authorization Independence, Clarity of Intent, DBAC, and QAPs. User-owned data is stored under `/users/{userId}` for simple ownership-based security rules. MapLayers are stored within the respective user's document to maintain a clear hierarchy. ExplorationSuggestions are stored in a root-level collection for easy querying and management since they do not have specific ownership requirements.\n\n**Authorization Independence**: MapLayer documents include the `userId` field, which is a denormalized copy of the user ID. This allows security rules to validate ownership of MapLayers directly without needing to perform `get()` operations to retrieve the user document, thus enabling atomic operations (transactions/batches) for creating layers.\n\n**QAPs (Rules are not Filters)**: The structure allows secure list operations. Listing map layers is scoped to a user's collection (`/users/{userId}/mapLayers`).\n\n**Structural Segregation (Homogeneous Security Posture)**: Each collection contains documents with uniform access control requirements, simplifying security rules.\n\n**Access Modeling**: Path-based ownership is used for user data (`/users/{userId}`), and hierarchical paths represent the User 1:N MapLayer relationship."
  }
}
